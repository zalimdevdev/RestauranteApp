// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestauranteApp.Models;

#nullable disable

namespace RestauranteApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250828004713_Migracionfase1-3")]
    partial class Migracionfase13
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RestauranteApp.Models.CategoriaMenu", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoriaId"));

                    b.Property<string>("DescripcionCategoria")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("CategoriaId");

                    b.ToTable("CategoriasMenu");
                });

            modelBuilder.Entity("RestauranteApp.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Cedula")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("RestauranteApp.Models.DatosNegocio", b =>
                {
                    b.Property<int>("DatosNegocioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DatosNegocioId"));

                    b.Property<string>("DireccionNegocio")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Ruc")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("DatosNegocioId");

                    b.ToTable("DatosNegocios");

                    b.HasData(
                        new
                        {
                            DatosNegocioId = 1,
                            DireccionNegocio = "Tu Dirección",
                            Nombre = "Nombre de tu Restaurante",
                            Ruc = "Tu RUC",
                            Telefono = "Tu Teléfono"
                        });
                });

            modelBuilder.Entity("RestauranteApp.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DetalleId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("DetalleId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("RestauranteApp.Models.Empleado", b =>
                {
                    b.Property<int>("EmpleadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpleadoId"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("EmpleadoId");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("RestauranteApp.Models.Factura", b =>
                {
                    b.Property<int>("FacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FacturaId"));

                    b.Property<int?>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer");

                    b.HasKey("FacturaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PedidoId")
                        .IsUnique();

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("RestauranteApp.Models.Gasto", b =>
                {
                    b.Property<int>("GastoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GastoId"));

                    b.Property<string>("CategoriaGasto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime?>("FechaGasto")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("GastoId");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("RestauranteApp.Models.Ingrediente", b =>
                {
                    b.Property<int>("IngredienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IngredienteId"));

                    b.Property<decimal>("CantidadStock")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("integer");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IngredienteId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("RestauranteApp.Models.ItemMenu", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("NombreItem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("ItemsMenu");
                });

            modelBuilder.Entity("RestauranteApp.Models.Mesa", b =>
                {
                    b.Property<int>("MesaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MesaId"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("NumeroMesa")
                        .HasColumnType("integer");

                    b.HasKey("MesaId");

                    b.ToTable("Mesas");
                });

            modelBuilder.Entity("RestauranteApp.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PedidoId"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MesaId")
                        .HasColumnType("integer");

                    b.HasKey("PedidoId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("MesaId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("RestauranteApp.Models.Proveedor", b =>
                {
                    b.Property<int>("ProveedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProveedorId"));

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("NombreProveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("ProveedorId");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("RestauranteApp.Models.Reservacion", b =>
                {
                    b.Property<int>("ReservacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReservacionId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("MesaId")
                        .HasColumnType("integer");

                    b.Property<int>("NumeroPersonas")
                        .HasColumnType("integer");

                    b.HasKey("ReservacionId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MesaId");

                    b.ToTable("Reservaciones");
                });

            modelBuilder.Entity("RestauranteApp.Models.DetallePedido", b =>
                {
                    b.HasOne("RestauranteApp.Models.ItemMenu", "ItemMenu")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteApp.Models.Pedido", "Pedido")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemMenu");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("RestauranteApp.Models.Factura", b =>
                {
                    b.HasOne("RestauranteApp.Models.Cliente", "Cliente")
                        .WithMany("Facturas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("RestauranteApp.Models.Pedido", "Pedido")
                        .WithOne("Factura")
                        .HasForeignKey("RestauranteApp.Models.Factura", "PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("RestauranteApp.Models.Ingrediente", b =>
                {
                    b.HasOne("RestauranteApp.Models.Proveedor", "Proveedor")
                        .WithMany("Ingredientes")
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("RestauranteApp.Models.ItemMenu", b =>
                {
                    b.HasOne("RestauranteApp.Models.CategoriaMenu", "CategoriaMenu")
                        .WithMany("ItemsMenu")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaMenu");
                });

            modelBuilder.Entity("RestauranteApp.Models.Pedido", b =>
                {
                    b.HasOne("RestauranteApp.Models.Empleado", "Empleado")
                        .WithMany("Pedidos")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteApp.Models.Mesa", "Mesa")
                        .WithMany("Pedidos")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("RestauranteApp.Models.Reservacion", b =>
                {
                    b.HasOne("RestauranteApp.Models.Cliente", "Cliente")
                        .WithMany("Reservaciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestauranteApp.Models.Mesa", "Mesa")
                        .WithMany("Reservaciones")
                        .HasForeignKey("MesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Mesa");
                });

            modelBuilder.Entity("RestauranteApp.Models.CategoriaMenu", b =>
                {
                    b.Navigation("ItemsMenu");
                });

            modelBuilder.Entity("RestauranteApp.Models.Cliente", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Reservaciones");
                });

            modelBuilder.Entity("RestauranteApp.Models.Empleado", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("RestauranteApp.Models.ItemMenu", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("RestauranteApp.Models.Mesa", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Reservaciones");
                });

            modelBuilder.Entity("RestauranteApp.Models.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("RestauranteApp.Models.Proveedor", b =>
                {
                    b.Navigation("Ingredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
